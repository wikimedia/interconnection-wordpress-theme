// Module Sizing
@mixin module-width($desktop-bp, $desktop-width) {
	width: 100%;

	@media (min-width: $desktop-bp) {
			width: $desktop-width;
	}
}

// Spacing
@mixin padding($topBottomMobile, $leftRightMobile, $topBottomDesktop, $leftRightDesktop) {

	padding: rem($topBottomMobile) rem($leftRightMobile);

	@media (min-width: $medium-bp) {
		padding: rem($topBottomDesktop) rem($leftRightDesktop);
	}
}

@mixin margin-bottom($size) {
	@if $size == 2 {
		margin-bottom: rem(80);

		@media (min-width: $medium-bp) {
			margin-bottom: rem(100);
		}
	} @else if $size == 1 {
		margin-bottom: rem(40);

		@media (min-width: $medium-bp) {
			margin-bottom: rem(60);
		}
	} @else {
		margin-bottom: rem(20);

		@media (min-width: $medium-bp) {
			margin-bottom: rem(30);
		}
	}
}

// Flexbox
@mixin flexbox($mobile-direction, $desktop-wrap, $desktop-bp, $desktop-direction) {
	display: flex;
	flex-direction: $mobile-direction;

	@media (min-width: $desktop-bp) {
		flex-direction: $desktop-direction;
		flex-wrap: $desktop-wrap;
	}
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// 3-column-grid
@mixin column-3 {
	@include flexbox(wrap, wrap, $small-bp, row);
	justify-content: space-between;
	flex-wrap: wrap;

	> article,
	> div {
		// 2 per row when bigger than small break point
		@include module-width($small-bp, 48%);
		// 3 per row when bigger than small break point
		@include module-width($medium-bp, 32%);
	}

	// last row elements aligned left
	&:after {
		content: "";
		display: block;
		margin-left: 32%;
	}
}

// 2-column-grid
@mixin column-2 {
	@include flexbox(wrap, wrap, $small-bp, row);
	justify-content: space-between;
	flex-wrap: wrap;

	> article,
	> div {
		@include module-width($small-bp, 46%);
	}
}

// 2/3 column, 1/3 column
@mixin column-2-to-1 {
	@include flexbox(column-reverse, wrap, $medium-bp, row);
	justify-content: space-between;
	flex-wrap: wrap;

	div:first-child {
		@include module-width($medium-bp, 65%);
	}

	div:last-child {
		@include module-width($medium-bp, 30%);
	}
}

// Shading
@mixin shade($shade) {
	@if $shade == "dark" {
		background: $base10;
		color: $base100;
	} @else {
		background: $base80;
		color: $base10;
	}
}

@mixin accent-line {
	position: relative;

	&:before {
		content: "";
		display: block;
		width: 4rem;
		height: 2px;
		background-color: $base10;
		position: absolute;
		bottom: -1.25rem;
	}
}